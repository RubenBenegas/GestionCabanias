<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RectangleShape1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QAAAAABJRU5ErkJggg==
</value>
  </data>
</root>